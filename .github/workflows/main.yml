name: Build Kivy APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'

    - name: Set up Java 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'adopt'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install kivy buildozer cython

    - name: Install Android SDK
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip
        wget https://dl.google.com/android/repository/commandlinetools-linux-8092744_latest.zip
        unzip commandlinetools-linux-8092744_latest.zip
        mkdir -p android-sdk/cmdline-tools/latest
        mv cmdline-tools/* android-sdk/cmdline-tools/latest/
        export ANDROID_HOME=$PWD/android-sdk
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

    - name: Install Android SDK components
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME --licenses
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "platforms;android-30" "build-tools;30.0.3" "ndk;21.4.7075529"

    - name: Set Android NDK environment variable
      run: echo "ANDROID_NDK_HOME=$ANDROID_HOME/ndk/21.4.7075529" >> $GITHUB_ENV

    - name: Patch NDK Python files
      run: |
        NDK_PYTHON_DIR="$ANDROID_HOME/ndk/21.4.7075529/toolchains/llvm/prebuilt/linux-x86_64/share/clang"
        sed -i 's/print \(.*\)/print(\1)/' "$NDK_PYTHON_DIR/clang-format.py"
        sed -i 's/print \(.*\)/print(\1)/' "$NDK_PYTHON_DIR/clang-include-fixer.py"

    - name: Install latest Autotools
      run: |
        sudo apt-get install -y autoconf automake libtool
        wget https://ftp.gnu.org/gnu/autoconf/autoconf-2.71.tar.gz
        tar xzf autoconf-2.71.tar.gz
        cd autoconf-2.71
        ./configure
        make
        sudo make install
        cd ..
        
        wget https://ftp.gnu.org/gnu/automake/automake-1.16.5.tar.gz
        tar xzf automake-1.16.5.tar.gz
        cd automake-1.16.5
        ./configure
        make
        sudo make install
        cd ..
        
        wget https://ftp.gnu.org/gnu/libtool/libtool-2.4.7.tar.gz
        tar xzf libtool-2.4.7.tar.gz
        cd libtool-2.4.7
        ./configure
        make
        sudo make install
        cd ..

    - name: Clone and patch libffi
      run: |
        git clone https://github.com/libffi/libffi.git
        cd libffi
        sed -i 's/AC_PROG_LD/LT_PATH_LD/g' configure.ac
        sed -i 's/AC_TRY_RUN/AC_TRY_LINK/g' configure.ac
        sed -i 's/LT_SYS_SYMBOL_USCORE/AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE/g' configure.ac
        autoreconf -fiv
        ./configure
        make
        sudo make install
        cd ..

    - name: Modify buildozer.spec
      run: |
        sed -i 's/^android.sdk =.*/android.sdk = 30/' buildozer.spec
        sed -i 's/^android.ndk =.*/android.ndk = 21.4.7075529/' buildozer.spec
        sed -i 's/^android.api =.*/android.api = 30/' buildozer.spec
        sed -i 's|^android.sdk_path =.*|android.sdk_path = '$ANDROID_HOME'|' buildozer.spec
        sed -i 's|^android.ndk_path =.*|android.ndk_path = '$ANDROID_NDK_HOME'|' buildozer.spec
        sed -i 's/^android.accept_sdk_license =.*/android.accept_sdk_license = True/' buildozer.spec
        sed -i 's/^android.build_tools =.*/android.build_tools = 30.0.3/' buildozer.spec

    - name: Debug buildozer.spec
      run: cat buildozer.spec

    - name: Start Buildozer build process
      run: |
        buildozer android debug

    - name: Upload APK
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: app-debug
        path: bin/*.apk

    - name: Debug on failure
      if: failure()
      run: |
        echo "Android SDK root:"
        ls -R $ANDROID_HOME
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "ANDROID_NDK_HOME: $ANDROID_NDK_HOME"
        echo "Build Tools:"
        ls -la $ANDROID_HOME/build-tools || echo "Build Tools directory not found"
        echo "AIDL location:"
        find $ANDROID_HOME -name aidl || echo "AIDL not found"
        echo "Current directory contents:"
        ls -la
        echo "Python path:"
        which python
        echo "Buildozer path:"
        which buildozer
        echo "Java version:"
        java -version
        echo "Autotools versions:"
        autoconf --version
        automake --version
        libtool --version
        echo "NDK Python files content:"
        cat "$ANDROID_HOME/ndk/21.4.7075529/toolchains/llvm/prebuilt/linux-x86_64/share/clang/clang-format.py"
        cat "$ANDROID_HOME/ndk/21.4.7075529/toolchains/llvm/prebuilt/linux-x86_64/share/clang/clang-include-fixer.py"
