name: Build Kivy APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install kivy buildozer cython

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'adopt'

    - name: Install Android SDK and required packages
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          openjdk-8-jdk \
          libssl-dev \
          libffi-dev \
          libtool \
          libnss3-dev \
          curl \
          build-essential \
          python3-openssl \
          python3-pip \
          python3-setuptools \
          python3-dev \
          zip \
          unzip \
          libbz2-dev \
          libreadline-dev \
          libgdbm-dev \
          libsqlite3-dev \
          autoconf \
          automake \
          libtool \
          texinfo

    - name: Install latest Autotools
      run: |
        wget https://ftp.gnu.org/gnu/autoconf/autoconf-2.71.tar.gz
        tar xzf autoconf-2.71.tar.gz
        cd autoconf-2.71
        ./configure --prefix=/usr
        make
        sudo make install
        cd ..
        
        wget https://ftp.gnu.org/gnu/automake/automake-1.16.5.tar.gz
        tar xzf automake-1.16.5.tar.gz
        cd automake-1.16.5
        ./configure --prefix=/usr
        make
        sudo make install
        cd ..
        
        wget https://ftp.gnu.org/gnu/libtool/libtool-2.4.7.tar.gz
        tar xzf libtool-2.4.7.tar.gz
        cd libtool-2.4.7
        ./configure --prefix=/usr
        make
        sudo make install
        cd ..

    - name: Download and set up Android SDK Command Line Tools
      run: |
        SDK_ROOT=$HOME/android-sdk
        SDK_TOOLS_VERSION=commandlinetools-linux-7583922_latest.zip
        
        mkdir -p $SDK_ROOT/cmdline-tools
        curl -o commandlinetools.zip https://dl.google.com/android/repository/$SDK_TOOLS_VERSION
        unzip commandlinetools.zip -d $SDK_ROOT/cmdline-tools
        rm commandlinetools.zip
        
        mv $SDK_ROOT/cmdline-tools/cmdline-tools $SDK_ROOT/cmdline-tools/latest
        
        echo "$SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH

    - name: Accept SDK licenses
      run: yes | sdkmanager --licenses

    - name: Install Android SDK packages
      run: sdkmanager "platform-tools" "platforms;android-29" "build-tools;29.0.3"

    - name: Initialize Buildozer
      run: |
        buildozer init
        buildozer android debug deploy run

    - name: Clone and build libffi
      run: |
        git clone https://github.com/libffi/libffi.git
        cd libffi
        ./autogen.sh
        sed -i 's/AC_TRY_COMPILE/AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]])], [AC_MSG_RESULT(yes)], [AC_MSG_RESULT(no)])/g' configure.ac
        sed -i 's/LT_SYS_SYMBOL_USCORE/AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE/g' configure.ac
        autoreconf -fiv
        ./configure
        make
        sudo make install
        cd ..

    - name: Update libffi in Python for Android
      run: |
        LIBFFI_DIR=$(pwd)/libffi
        sed -i "s|recipe = LibffiRecipe()|recipe = LibffiRecipe()\n        recipe.built_libraries = {'libffi.so': '$LIBFFI_DIR/.libs/libffi.so'}|" $GITHUB_WORKSPACE/.buildozer/android/platform/python-for-android/pythonforandroid/recipes/libffi/__init__.py

    - name: Build APK
      run: |
        buildozer -v android debug

    - name: Run Python for Android toolchain
      run: |
        python -m pythonforandroid.toolchain create --dist_name=myapp --bootstrap=sdl2 --requirements=python3,kivy,libffi --arch=arm64-v8a --copy-libs --color=always --storage-dir=$GITHUB_WORKSPACE/.buildozer/android/platform/build-arm64-v8a --ndk-api=21 --ignore-setup-py --debug

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: app-debug
        path: bin/*.apk
