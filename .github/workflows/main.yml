name: Build Kivy APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install kivy buildozer cython

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Install Android SDK and required packages
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          openjdk-11-jdk \
          libssl-dev \
          libffi-dev \
          libtool \
          libnss3-dev \
          curl \
          build-essential \
          python3-openssl \
          python3-pip \
          python3-setuptools \
          python3-dev \
          zip \
          unzip \
          libbz2-dev \
          libreadline-dev \
          libgdbm-dev \
          libsqlite3-dev \
          autoconf \
          automake \
          libtool \
          texinfo

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2

    - name: Install Android SDK components
      run: |
        sdkmanager --install "platforms;android-31" "build-tools;30.0.3" "ndk;21.4.7075529"
        yes | sdkmanager --licenses

    - name: Set Android SDK environment variables
      run: |
        echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/21.4.7075529" >> $GITHUB_ENV
        echo "$ANDROID_SDK_ROOT/tools" >> $GITHUB_PATH
        echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH

    - name: Start Buildozer build process
      run: |
        buildozer android debug

    - name: Debug Gradle configuration
      run: |
        cd .buildozer/android/platform/build-arm64-v8a/dists/myapp
        echo "Gradle version:"
        ./gradlew --version
        echo "Gradle build scan:"
        ./gradlew buildEnvironment --scan

    - name: Run Gradle with debug output
      run: |
        cd .buildozer/android/platform/build-arm64-v8a/dists/myapp
        ./gradlew assembleDebug --info --stacktrace

    - name: Check Gradle wrapper properties
      run: |
        cd .buildozer/android/platform/build-arm64-v8a/dists/myapp
        cat gradle/wrapper/gradle-wrapper.properties

    - name: Upload Gradle logs
      uses: actions/upload-artifact@v3
      with:
        name: gradle-logs
        path: .buildozer/android/platform/build-arm64-v8a/dists/myapp/build/outputs/logs/

    - name: Build APK (if Gradle succeeded)
      if: success()
      run: |
        buildozer -v android debug

    - name: Upload APK
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: app-debug
        path: bin/*.apk
